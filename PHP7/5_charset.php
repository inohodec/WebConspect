<?php
//==================== PHP и UTF-8 ===========================
//В ядре языка существует проблема с поддержкой UTF-8 которая использует многобайтную кодировку
//Для этого необходимо проверить расширение mbstring командой "php -m" (для линукс и макос обычно все ок)
// В винде нужно проверить файл php.ini и расскоментировать строки extension dir = "ext" и 
//extension=php_mbstring.dll(убрать точку с запятьй перед строками)
//Далее можно использовать функции библиотеки
//Так же возможно перенастроить php так, чтобы вместо стандартных функций использовались аналоги из 
//mbstring, для этого нужно в секции  [mbstring] найти директиву mbstring.func_overload и сменить 
//её значение с 0 на 2 (ATTENTION! возможна проблема с битрикс или PhpMyAdmin)

$string = "Здарова, брат";
echo strlen($string)."<br>";//22 стандартная функция вместо кол-ва символов вернет кол-во байт
echo mb_strlen($string)."<br>";//13 mbstring функция посчитает кол-во символов

#---------------------- strpos() Поиск подстроки -------------------
$string = "Здарова, брат";
if (strpos($string, "арова") === false) echo "Void";//выдаст 4 (объяснение ниже)
mb_strpos($string, "арова");//Выдаст 2 
//вернет позицию подстроки в переменной $string, если ее там нет то false, но важно помнить, 
//что если подстрока будет стоять в самом начале, то функция вернет 0 (strpos($string, "З")) 
//который при нестрогом сравнении 0 == false будет иснинным, поэтому используем ===, 
//также важно помнить, что т.к. используется utf-8 то функция считает что 1 символ 
//занимает 2 позиции(буква "д" вернет позицию 2, "а" позицию 4), для нормального использования 
//используем mb_strpos($string, "арова")

#------------------------ trim() Обрезание пробелов ---------------------
//Удаляет " ", \n (new line), \r (return carrige), \t (tab), \0 (zero bite), \x0B (vertical tab)
//и возвращает КОПИЮ переменной
echo trim(' Hello\r '); // return just "Hello"
trim($_SERVER['REQUEST_URI'], "/"); //Удалит символ "/" если он есть с обоих концов строки

#------------------------ strccmp($str1, $str2) Сравнение строк ---------------------
//ТОЛЬКО К ЛАТИНИЦЕ, с кирилицей бока!
//Сравнивает строки посимвольно(побайтово) и если строки равны то возвращает 0, 
//если $str1 < $str2, то -1, и если $str1 > $str2 то 1. Если символов в одной строке больше чем в другой, 
//то она будет больше Xl > X
echo strcmp($str1, $str2);
echo strcasecmp($str1, $str2); //тоже что и выше но без учета регистра

#----------------------- substr($str, $start, $length) Возвращает подстроку ----------------
//Возвращает подстроку строки str, начинающейся с start символа по счету и длиной length символов.
$result = substr('Hello Max', 1);//ello Max
$result = substr('Hello Max', 2, 2);//ll
$result = substr('Hello Max', -3, 3);//Отриц. значение отсчитывает первый символ с конца, вернет - Max

#--------------------------str_replace() substr_replace() Замена
//str_replace(search, replace, subject) — Заменяет все вхождения строки поиска на строку замены и возвращает результат. Работает с любыми кодировками
echo str_replace('Hi', 'Buy', 'Hi Max');//return "Buy Max"
$vovels = ["i", "a"];
echo str_replace($vovels, "", 'Hi Max');//return "H Mx"
$to = ["I","A"];
echo str_replace($vovels, $to, 'Hi Max');//return "HI MAx"

str_ireplace($search, $replace, $subject); // тоже что и выше, но не учитывает регистр при замене

substr_replace('Current string for replacement', "example", 13);//Current string example - заменяет с указанной позиции

#---------------------Преобразование символов-------------------------
//преобразование в URL
$string = "Привет";
$string = urlencode($string);//%D0%9F%D1%80%D0%B8%D0%B2%D0%B5%D1%82
$string = urldecode($string);//Привет


#------strip_tags($string, $allowedSTags) — Удаляет HTML и PHP-теги из строки

$text = '<p>Параграф.</p><!-- Комментарий --> <a href="#fragment">Еще текст</a>';
echo strip_tags($text, '<a>');//Параграф. <a href="#fragment">Еще текст</a> удалит все теги кроме разрешенных(в данном случае <a>)
$text = "O'reily";
addcslashes($text);// — Экранирует cтроку слешами в стиле O\'reily'
stripcslashes($text); //Удаляет экранирование символов, произведенное функцией addcslashes() O'reily

#----------------------Регистр-----------------------
//Проблема с кириллицей и UTF8
strtolower($str);//нижний регистр
strtoupper($str);//верхний регистр
ucfirst($str);//Заглавная большая, остальные как есть

