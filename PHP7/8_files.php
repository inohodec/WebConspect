<?php

#=======================================ФАЙЛЫ===========================================

//-------------------Открытие---------------------------

/*Важная общая информация
подробнее см. в доках или Котеров ст.315
-----------------------------------------------------------------------------------------------------------
'r'  - 	Открывает файл только для чтения; помещает указатель в начало файла.  |
																			  |не создают файл если его нет
'r+' -	Открывает файл для чтения и записи; помещает указатель в начало файла.|не очищает файл при открытии
-----------------------------------------------------------------------------------------------------------
'a'  - 	Открывает файл только для записи; помещает указатель в конец файла.   |создаёт файл если его нет
																			  |ВСЕГДА записывает данные
'a+' -	Открывает файл для чтения и записи; помещает указатель в конец файла. |в конец файла, не очищает
-----------------------------------------------------------------------------------------------------------
'w'  - 	Открывает файл только для записи; помещает указатель в начало файла.  |создаёт файл если его нет
																			  |ВСЕГДА очищает данные
'w+' -	Открывает файл для чтения и записи; помещает указатель в начало файла.|при открытии
-----------------------------------------------------------------------------------------------------------

также нужно стараться всегда открывать файл в бинарном режиме "b" для того что бы не интерперетировались символы переноса строк в разных ОС. t - открывает как текстовый

В путях к файлу всегда используем "/", не зависимо от ОС, php сам все переделает
*/

$file = fopen("/home/user/file.txt", "r+t");//открываем файл для RW в текстовом режиме
$file = fopen("http://mcomp.dp.ua/index.html", "rb");//открываем файл для R в бинарном режиме

$file = fopen("/file.txt", "rt") or die("Can't open file");//либо открывает файл, либо заканчивает программы с выводом


//--------------Временный файл------------------------------
tmpfile()//Создаёт временный файл с уникальным именем, открывая его в режиме чтения и записи (w+), и возвращает файловый указатель. Файл автоматически удаляется после закрытия например функцией fclose()
$temp = tmpfile();
fwrite($temp, "Some string");//записываем строку в файл
fseek($temp, 0);//выставляем внутренний указатель в 0 строку
echo fread($temp, 1024);//считываем данные и выводим в браузер
fclose($temp); // происходит удаление файла

//--------------------Закрытие файла---------------------- 
fclose($file);//Закрывает файл открытый fopen(), popen(), fsockopen()
// ВСЕГДА!!! нужно закрывать сетевые соединения, для предотвращения простоя канала и чрезмерной загрузки сервера, а при FTP особенно, тк при закрытии канала буфер(8кб) с передаваемыми данными очищается и данные из него отправляеться на сервер, в противном случае данные могут быть не отправлены и в итоге они либо не передадуться вобще или данные будут битыми

#-----------------------ЧТЕНИЕ и ЗАПИСЬ-------------------------
//Данные ВСЕГДА!!! считываются или записываются начиная с текущей позиции указателя файла
//Все функции чтения/записи передвигают указатель к следующей позиции после прочитанного/записанного блока данных
fread($file); //считывает данные с файла, если есть аргумент length, то считает указанное кол-во байт
fwrite($file, $string);//Записывает данные в файл(точнее в конец файла, не очищая его);
//считает содержимое файла("hi, bro") и добавит к его содержимому Hello world!!! 
//вывод "hi, bro hi, bro Hello world!!!" скорее всего функция ставит указатель в конец файла
fputs();//тоже что и fwrite($file, $string);

$file = fopen("/somefile.txt", "r+t");
$content = fread($file, 10000)."<p>Hello world!!!</p>>";
fwrite($file, $content);
fclose($file);

file($filesource, $flag);//считывает файл целиком и возвращает массив где каждый элемент это одна отдельная строка, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES флаги пропускающие пустую строку и удаляющие символ переноса строки из каждого значения массива
$f_arr = file("./test.txt", FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
foreach ($f_arr as $string => $value) {
    echo "Sting $string is: $value<br>";
}

file_get_contents($filename);//целиком читает файл
file_put_contents($filename, $data, $flag);//записывает данные в файл без трансляции перевода строки, $flag = FILE_APPEND(в конец файла), LOCK_EX(эксклюзивная блокировка)

parse_ini_file($filename);//Создает ассоциативный массив из ini файла см. книгу 327 или доки 

#----------------Построчное чтение-----------------
$data = fgets($file);//построчное чтение до \n и т.п. перенос строки так же заносится в результат
$data = fgetcsv($file, 10000);//читает CSV файлы (таблицы), преобразует текущую строку в массив

define("MYFILE", __DIR__."/table.csv");
$file = fopen(MYFILE, "rt");
    for ($i = 0; $data = fgetcsv($file, 10000); $i++) {
        $num = count($data);
        echo "<h3>Строка номер $i (полей: $num)</h3>";
        for ($c = 0; $c < $num; $c++) echo "[$c]: $data[$c]<br>";
    }


#----------------Положение указателя------------------
fseek($file, $offset, $whence);//$offset - отступ от текущей позиции. $whence SEEK_SET/SEEK_CUR/SEEK_END соответственно начало/текущая позиция/конец файла. Важно, что при удачной установке выдает "0" иначе "-1"

ftell($file); //возвращает текущую позицию указателя файла, можно использовать с fseek для запоминания состояния указателя файла

ftruncate($file, $size)//усекает файл до указанного размера, но ВАЖНО помнить что если файловый указатель стоял на месте которого теперь не существует, то при открытии файла данные до указателя заполнятся "0"-ми, поэтому нужно стараться переставлять указатель на начало после урезания файла
$f= fopen("file.txt", "r+");
ftruncate($f, 0);
fseek($f, 0, SEEK_SET);


#----------------Работа с путями------------------------
echo basename("/home/user/file.txt");//выведет file.txt
echo basename("/home/user/file.txt", "txt");//выведет file

echo dirname("/usr/opt/local/etc/hosts"); // /usr/opt/local/etc/ -выведет родительскую директорию файла или дтректории

tempnam($dir, $prefix);//создаст файл с уникальным именем в указанной директории
tempnam(".", "user_ID_");//создаст файл с именем user_ID_bwP1a3 или пожожим

echo realpath("./test.txt");//выведет полный путь к файлу /var/www/html/test.max/public_html/test.txt


#---------------------Манипулирование файлами----------------------
copy($source, $dest)//CREATE A COPY
rename($oldname, $newname);//return true or false
unlink($filename)//Delete file

#----------------------БУФЕР-------------------------------

fflush($file); //принудительно отправляет данные из буфера в файл, когда мы делаем fclose происходит отправка, но если по какой либо причине необходимо отправить данные, то пользуемся этой функцией
set_file_buffer($file, $size);//лучче не трогать, во избежание проблем