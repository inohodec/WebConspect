<?php 

//------------------Статические св-ва----------------------
/*
Статические св-ва и методы можно используются в контексте класса. Также статические методы
имеют доступ только к статическим св-вам класса, т.к. обычные св-ва и методы пренадлежат объекту.

ВАЖНО: если статическое св-во изменить, то все экземпляры класса(объекты) получат к нему доступ.
Также обращаться к статическому методу или св-ву можно из любой точки кода даже не создавая объект,
что весьма удобно.
Обращение происходит через "::" , которую применяеться только для статических методов и св-в, а также
для переопределенных методов родительского класса 
1 ClassName::$property | ClassName::getProperty() - для доступа из вне
2 self::$property | getProperty::method() - для доступа из самого класса
3 parent::$property | parent::getProperty() - для доступа из дочернего класса

ПРИМЕР: у нас есть класс товара, при условии что мы покупаем 3 или более товара ничаниает действовать скидка 10грн на каждый товар(изначально она равна 0). Нам нужно сделать так, что бы при количестве объектов более 2х меналось значение скидки для всех объектов одновременно. Обычное сво-во метода не подойдет т.к. у каждого экземпляра класса оно свое и придется либо перебирать все объекты класса меняя величину скидки, либо выкручиваться другим способом. Здесь то нам и помогут статические св-ва, т.к. они относятся не к какому-либо отдельному объекту, а ко всему классу целиком
*/
class Purchaise
{
 	public static $offer = 0;//скидка равна 0 
 	public $price;  	
}  
class Item extends Purchaise {//класс наследует Purchaise
	//some code
}
$item1 = new Item();//Создаем 3 товара
$item2 = new Item();
$item3 = new Item();

$item1->price = 100;//Устанавливаем цены
$item2->price = 200;
$item3->price = 300;

$carrt = [];//это корзина в которую мы добавляем товары
$cart[] = $item1;
$cart[] = $item2;
$cart[] = $item3;

if (count($cart) > 2) {//если товаров больше 2х, то устанавливаем скидку в 10 
	Purchaise::$offer = 10;
}
//выводим цену товара со скидкой
echo "Total price: ".(($item1-Purchaise::$offer)+($item2-Purchaise::$offer)+($item3-Purchaise::$offer));

//В папке с примерами более развернутый вариант работы со статическими прременными

//-----------------------Константы-----------------------------
//
/* Их невозможно изменить, они могут быть только элементарного типа (int, str) как и статические св-ва
   Объявляются через const также ображение идет в контексте класса как и static, перменные без знака $
   Доступ аналогичен static
*/
class Math {
    const PI = 3.14;
    function getPI() {
        return self::PI;
    }
}
echo Math::PI."<br>";
$pi = new Math();
echo $pi->getPI()."<br>";
echo $pi::PI;