                                                                 Linux
****************************************************************************************
*							Навигация
****************************************************************************************
pwd										- текущая директория

ls										- список файлов в текущей директоии 
	ls -lah								- показать списком с подробной информацией, скрытые, размер в человеческом виде
	ls -F			--classify					- добавляет в конец каждого имени символ-индикатор (например, прямой слеш, если это имя каталога)
	ls -S									- Сортировать результаты по размеру (size)
	ls -t									- Сортировать результаты по времени (time) последнего изменения
	ls -ld								- информация о каталоге, а не о его содержимом								
	
cd										- переход в директорию
	cd 									- Сменить рабочий каталог на домашний
	cd -									- Сменить рабочий каталог на предыдущий рабочий каталог
	cd ~username							- Перейти в домашний каталог пользователя [username]

*****************************************************************************************
*					          Информация о файлах                             *
*****************************************************************************************

stat /etc/my-file							- информация о файле	
	File: /etc/my-file
	Size: 0               Blocks: 0          IO Block: 4096   regular empty file
	Device: 2h/2d   Inode: 32932572275166232  Links: 1
	Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
	Access: 2020-12-06 13:18:22.199778300 +0200
	Modify: 2020-12-06 13:18:22.199778300 +0200
	Change: 2020-12-06 13:18:22.199778300 +0200
	Birth: -
-----------------------------------------------------------------------------------------
file SQL.txt							- определяет тип файла
	SQL.txt: UTF-8 Unicode text

****************************************************************************************
*							Чтение содержимого файлов
****************************************************************************************
less									- программа для чтения файлов
	Page Up или b						- Прокрутка к началу на одну страницу
	Page Down или ПРОБЕЛ					- Прокрутка к концу на одну страницу
	G								- Переход в конец текстового файла
	g								- Переход в начало текстового файла
	/[символы]							- Поиск вниз по тексту до ближайшего вхождения указанной последовательности символов
	n								- Поиск следующего вхождения искомой последовательности символов
	h								- Вывод экрана со справкой
	q								- Завершить less


****************************************************************************************
*				Копирование, перемещение, удаление и ссылки для файлов
****************************************************************************************

параметры для cp
	-a		- Скопировать файлы и каталоги со всеми атрибутами, включая идентификаторы владельцев и права доступа. Без этого параметра копии обычно получают значения атрибутов по умолчанию
	-i		- Запрашивать у пользователя подтверждение перед перезаписью существующего файла. Если этот параметр отсутствует, команда cp просто перезапишет существующие файлы (без предупреждения)
	-r		- Рекурсивно копировать каталоги и их содержимое. Это обязательный параметр (или параметр -a) при копировании каталогов
	-u		- При копировании файлов из одного каталога в другой копировать только файлы, отсутствующие в каталоге назначения или более новые.
	-v		- Выводить информационные сообщения в процессе копирования

cp file1 file2		    - Скопирует file1 в file2. Если file2 существует, он будет затерт новым файлом file1. Если file2 отсутствует, он будет создан
cp -i file1 file2		- что и выше но если file2 существует, спросит у пользователя перезаписывать или нет
cp file1 file2 dir1    	- Скопирует file1 и file2 в каталог dir1. Каталог dir1 должен существовать
cp dir1/* dir2		    - С использованием группового символа. Скопирует все файлы из каталога dir1 в каталог dir2. Каталог dir2 должен существовать
cp -r dir1 dir2         - Скопирует содержимое каталога dir1 в каталог dir2. Если каталог dir2 не существует, он будет создан и заполнен содержимым каталога dir1. 
				        Если каталог dir2 существует, тогда в него будет скопирован сам каталог dir1 (вместе с егосодержимым)

параметры для mv
	-i		- Запрашивать у пользователя подтверждение перед перезаписью существующего файла. Если этот параметр отсутствует, команда mv просто перезапишет существующие файлы (без предупреждения)
	-u		- При перемещении файлов из одного каталога в другой перемещать только файлы, отсутствующие в каталоге назначения или более новые.
	-v		- Выводить информационные сообщения в процессе перемещения

mv file1 file2		    - Переместит file1 в file2. Если file2 существует, он будет заменен на новый файл file1. Если file2 отсутствует, он будет создан. В любом случае файл file1 исчезнет
mv -i file1 file2		- То же, что и выше, но если файл file2 существует, у пользователя будет запрошено подтверждение перед перезаписью файла
mv file1 file2 dir1	    - Переместит file1 и file2 в каталог dir1. Каталог dir1 должен существовать
mv dir1 dir2		    - Если каталог dir2 отсутствует, команда mv создаст его и переместит содержимое каталога dir1 в каталог dir2, после чего удалит dir1.
				        Если каталог dir2 существует, команда mv переместит каталог dir1 (вместе с его содержимым) в каталог dir2

параметры для rm
	-i		- Запрашивать у пользователя подтверждение перед удалением существующего файла. Если этот параметр отсутствует, команда rm просто удалит существующие файлы (без предупреждения)
	-r		- Рекурсивно удалит каталоги. То есть вместе с каталогом будут удалены все его подкаталоги. Это обязательный параметр при удалении каталогов
	-f		- Игнорировать отсутствующие файлы и не запрашивать подтверждения. Этот параметр отменяет действие параметра --interactive(-i)
	-v		- Выводить информационные сообщения в процессе удаления

rm file1			    - Просто удалит файл file1
rm -i file1			    - Перед удалением file1 запросит подтверждение у пользователя
rm -r file1 dir1		- Удалит файл file1 и каталог dir1 со всем его содержимым
rm -rf file1 dir1		- То же, что и выше, но в отсутствие file1 и/или dir1 просто продолжит работу, не выводя никаких сообщений

****************************************************************************************
*							Ссылки  на файлы
****************************************************************************************
ln file hard_link								- жесткая ссылка 
ln -s file soft_link							- мягкая ссылка

****************************************************************************************
*							Ресурсы
****************************************************************************************
df -h										- место на диске
free -h									- количество свободной/занятой ОЗУ

****************************************************************************************
*							Доп инфо по коммандам
****************************************************************************************
type — сообщает, как интерпретируется имя указанной команды;
	type cd
	>cd is a shell builtin

which — сообщает, какая программа будет выполнена;
	which ls
	>/bin/ls

help — выводит справку по встроенным командам оболочки;

man — выводит страницу справочного руководства с описанием команды;

apropos — выводит список подходящих команд;

info — выводит запись из справочного руководства Info с описанием команды;

whatis — выводит краткое описание команды;
	whatis ls
	ls (1)               - list directory contents

alias — создает псевдоним для команд
	alias foo='cd /usr; ls; cd -'
	alias имя='строка'
	unalias foo		  - удалит алиас


*****************************************************************************************
*					            Перенаправление вывода                        *
*****************************************************************************************
0										- стандартный ввод stdin
1										- стандартный вывод stdout
2										- стандартный вывод ошибки stderr

ls > file.txt								- вывод в файл(создаст если его нет) с затиранием содержимого, если оно было
ls >> file.txt								- вывод в конец файла, без затирания
> file.txt									- создаст пустой файл
ls /bin/usr > file.txt 							- перенаправления вывода в файл file.txt, при ошибке вывод будет на экран 
ls /bin/usr > file.txt 2>&1	или  ls /bin/usr &> file.txt	- перенаправления вывода(в том числе ошибки) в файл file.txt
ls -l /bin/usr 2> /dev/null						- удаление нежелательного вывода
ls -l /bin/usr > file.txt 2>&1 /dev/null				- если нет ошибки, создаст файл с выводом, иначе "подавит вывод ошибки"

ls -l file.txt | sort | uniq | grep some_word			- передает вывод комманды ls нв вход sort, потом sort передает вывод на вход uniq и т.д.
	sort	- комманда сортирует вывод по алфавиту
	uniq	- удаляет повторяющиеся строки
	wc	- выводит кол-во строк, слов и размер файла
	grep	- поиск по файлу

head file.txt								- выводит первые 10 строк файла
head -n 5  file.txt 							- выводит первые 5 строк файла

tail file.txt								- выводит последние 10 строк файла
tail -n 5  file.txt							- выводит последние 5 строк файла
tail -f									- выводит последние 10 строк в режиме реального времени, т.е. при добавлении новых, мы их увидим

tee										- создает Т образное разветвление, копирует данные в stdout и в файл/лы
ls -l /bin | tee file.txt | grep zip				- создаст файл с выводом ls и передаст копию вывода далее на grep



**************************************************************************************************
*					            Пользователи и группы su и sudo                        *
**************************************************************************************************
su [-[l]] [пользователь]						- (switch user) переключает на указанного пользователя, l - "закидывает нас в папку пользователя"
su - max									- то же что и выше "-" заменяет ключ -l
su										- без имени пользователя переключет на root
su -c [пользователь] 'команда'					- выполнит команду от указаного пользователя

Использовать команду sudo могут далеко не все пользователи, а только те, которые указаны в файле /etc/sudoers
зачастую достаточно добавить пользователя в группу sudo
sudo some_script								- запустит скрипт от пользователя root
whoami 									- выводит пользователя

max
--------------------------------------------------------------------------
id										- информация о пользователе

uid=1000(max) gid=1000(max) groups=1000(max),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),117(netdev)
--------------------------------------------------------------------------
cat /etc/passwd								- информация о всех пользователях 	

имя : пароль : id пользователя : id группы : описание : домашняя директория : шелл по умолчанию(nologin значит что пользователь не может входить в систему)
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
...
sshd:x:109:65534::/run/sshd:/usr/sbin/nologin
landscape:x:110:115::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:111:1::/var/cache/pollinate:/bin/false
max:x:1000:1000:,,,:/home/max:/bin/bash
--------------------------------------------------------------------------
groups user_name                      				- информация в каких группах состоит пользователь

usermod -aG www-data user_name         			 	- добавление и удаление пользователя к группе

	---Добавить пользователя к группе www-data можно следующей командой:

	sudo usermod -a -G www-data user_name

	---Удалить пользователя из группы www-data можно командой:

	sudo gpasswd -d user_name www-data

                                        				- изменение группы каталога

---Теперь изменим группу, к которой принадлежит корневой каталог, применив рекурсивный вариант команды.

sudo chgrp -R www-data /var/www

---------------------------------------------------------------------------

sudo -u nobody mkdir /tmp/test					- создает директорию от пользователя nobody(вызывает sudo для выполнения указанной команды от имени пользователя, отличного от root)
--------------------------------------------
sudo -i 								-	 временно стать root


*********************************************************************************
*					                Права доступа                               *
*********************************************************************************
rwx для файла - все просто read - write - execute
r - для директории - возможность читать список файлов в ней
w - возможность писать в дректорию
x - Это право позволяет перемещаться в директорию и обращаться ко всем расположенным в ней файлам и каталогам, т.е если мы хотим прочитать ls -la, то без этого атрибута ничего не выйдет, т.к. для 	обращения к метаданным файла, необходим отрибут x

u - владелец файла;
g - группа файла;
o - другие пользователи.

+ - добавит права (знак плюс)
- - удалит права (знак минус)

chmod ugo+rwx test5
chmod ug+rwx,o+rx test5
chmod o-w test5     уберет у остальных пользователей право на запись

r - 4 (read)
w - 2 (wright)
x - 1 (execute)

r-w = 6, rwx = 7, -wx = 3, --- = 0
chmod -R 764 filename равен chmod u=rwx,g=rx,o=rx filename

СПЕЦИАЛЬНЫЕ ПРАВА ДОСТУПА К ФАЙЛАМ В LINUX
Для того, чтобы позволить обычным пользователям выполнять программы от имени суперпользователя без знания его пароля была придумана такая вещь, как SUID и SGID биты. Рассмотрим эти полномочия подробнее.

SUID - если этот бит установлен, то при выполнении программы, id пользователя, от которого она запущена заменяется на id владельца файла. Фактически, это позволяет обычным пользователям запускать программы от имени суперпользователя;
SGID - этот флаг работает аналогичным образом, только разница в том, что пользователь считается членом группы, с которой связан файл, а не групп, к которым он действительно принадлежит. Если SGID флаг установлен на каталог, все файлы, созданные в нем, будут связаны с группой каталога, а не пользователя. Такое поведение используется для организации общих папок;
Sticky-bit - этот бит тоже используется для создания общих папок. Если он установлен, то пользователи могут только создавать, читать и выполнять файлы, но не могут удалять файлы, принадлежащие другим пользователям.

Для файла test6 установим SUID:

 chmod u+s test6

А для test7 - SGID:

 chmod g+s test7

Команда chmod -R будет рекурсивно применена ко всем вложенным файлам и каталогам.

----------------------------------
chown rob:developers strace.log			- поменять пользователя и группу у файла strace.log
chown rob:developers strace.log 1.txt	- то же что и выше, но для двух файлов
chown rob strace.log					- сменить владельца
chown :newgroup /home					- сменить id группы
chown -R max base						- сменить владельца у папки base и всех ее подпапок(рекурсивно)


*****************************************************************************************
					                Выполнение программ и пакеты                        *
*****************************************************************************************
type cp							- эти команды показывают расположение запускаемой программы
wich cp
wereis cp	

Для вновь устанавливаемых программ обычно это /usr/local/bin
запуск программы из текущей директории делается через
./someProgramm
если указать без точки, то будет ошибка(сделано из соображений безопасности)

стандартные пути берутся из переменной PATH
echo $PATH

/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0/:/mnt/c/windows/System32/OpenSSH/:/mnt/c/Program Files/7-Zip:/mnt/c/Program Files (x86)/Common Files/Acronis/SnapAPI/:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Users/judas/AppData/Local/Microsoft/WindowsApps:/snap/bin

не рекомендуется менять эту переменную, но если необходимо:
нужно поправить один из конфигурационных файлов Bash. Эти файлы лежат в домашней директории пользователя:

.bashrc
.bash_profile
.profile

глобально можно добавить путь в /etc/environment

В зависимости от настроек терминала, Bash прогружает либо одни файлы, либо другие. Если в вашей домашней директории есть файл .bashrc, то пробуйте использовать его, если нет, то остальные файлы в том порядке, в котором они приведены выше. Добавьте в этот файл следующую строку:

export PATH=$PATH:/path/to/directory


apt search name                                 - ищет пакет по указанному словосочетанию
dpkg -L full_name                               - показывает все файлы установленного пакета
apt show php7.4-xdebug                          - выводит полную инфу о пакете
*************************************************************************************
			                        Работа процессов в фоне                         *
*************************************************************************************
Важно понимать, что если программы работают в фоне и терминал закрыть, то они тоже закроются
mc &                                            - запуск программы в фоне

jobs                                            - показывает фоновые процессы          
[1]-  Running                 calibre &
[2]+  Stopped                 mc               

jobs -l                                         - показывает фоновые процессы с более подробным выводом
[1]-  6698 Running                 calibre &
[2]+  6995 Stopped (tty output)    mc

fg 2 или %2                                     - возвращение команды из фонового режима

для переноса программы или процесса в фон
Ctr+Z (ставит процесс на паузу) и после вводим bg

kill %n где n номер запущеной задачи            - завершает процесс
kill PID 


*************************************************************************************
			                Работа c процессами и сервисами                         *
*************************************************************************************

ps -aux                                         - вывод всех процессов
ps -aux | grep name_of_rocess                   - вывод процесса по имени

kill PID аналогично kill SIGTERM PID            - мягкое завершение процесса и всех от него зависимых(требует времени) 
kill -9 PID аналогично kill SIGKILL PID         - жесткое завершение процесса(хвосты остаются работать) 

pkill firefox                                   - завершение всех процессов по шаблону(можно использовать часть слова)
pgrep -l [process name]                         - вывод работающих процессов по шаблону

killall viber                                   - использует имя процесса вместо PID и завершает все экземпляры процесса с этим именем

cat /etc/services                               - вывод всех сервисов и портов которые используються
systemctl list-units --type service             - вывод всех сервисов и портов которые используються
