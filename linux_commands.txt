                                                                    linux
*****************************************************************************************
*					                Пользователи и группы                               *
*****************************************************************************************
whoami 									- выводит пользователя

max
-----------------------------------------
id										- информация о пользователе

uid=1000(max) gid=1000(max) groups=1000(max),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),117(netdev)
-----------------------------------------
cat /etc/passwd							- информация о всех пользователях 	

имя : пароль : id пользователя : id группы : описание : домашняя директория : шелл по умолчанию(nologin значит что пользователь не может входить в систему)
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
...
sshd:x:109:65534::/run/sshd:/usr/sbin/nologin
landscape:x:110:115::/var/lib/landscape:/usr/sbin/nologin
pollinate:x:111:1::/var/cache/pollinate:/bin/false
max:x:1000:1000:,,,:/home/max:/bin/bash

                                        - информация в каких группах состоит пользователь

groups user_name
                                        - добавление и удаление пользователя к группе

Добавить пользователя к группе www-data можно следующей командой:

sudo usermod -a -G www-data user_name

Удалить пользователя из группы www-data можно командой:

sudo gpasswd -d user_name www-data

                                        - изменение группы каталога

Теперь изменим группу, к которой принадлежит корневой каталог, применив рекурсивный вариант команды.

sudo chgrp -R www-data /var/www

------------------------------------------
stat /etc/my-file						- информация о файле	

File: /etc/my-file
Size: 0               Blocks: 0          IO Block: 4096   regular empty file
Device: 2h/2d   Inode: 32932572275166232  Links: 1
Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
Access: 2020-12-06 13:18:22.199778300 +0200
Modify: 2020-12-06 13:18:22.199778300 +0200
Change: 2020-12-06 13:18:22.199778300 +0200
Birth: -
--------------------------------------------
sudo -u nobody mkdir /tmp/test			- создает директорию от пользователя nobody(вызывает sudo для выполнения указанной команды от имени пользователя, отличного от root)
--------------------------------------------
sudo -i 								- вретенно стать root


*********************************************************************************
*					                Права доступа                               *
*********************************************************************************
rwx для файла - все просто read - write - execute
r - для директории - возможность читать список файлов в ней
w - возможность писать в дректорию
x - Это право позволяет перемещаться в директорию и обращаться ко всем расположенным в ней файлам и каталогам, т.е если мы хотим прочитать ls -la, то без этого атрибута ничего не выйдет, т.к. для 	обращения к метаданным файла, необходим отрибут x

u - владелец файла;
g - группа файла;
o - другие пользователи.

+ - добавит права (знак плюс)
- - удалит права (знак минус)

chmod ugo+rwx test5
chmod ug+rwx,o+rx test5
chmod o-w test5     уберет у остальных пользователей право на запись

r - 4 (read)
w - 2 (wright)
x - 1 (execute)

r-w = 6, rwx = 7, -wx = 3, --- = 0
chmod -R 764 filename равен chmod u=rwx,g=rx,o=rx filename

СПЕЦИАЛЬНЫЕ ПРАВА ДОСТУПА К ФАЙЛАМ В LINUX
Для того, чтобы позволить обычным пользователям выполнять программы от имени суперпользователя без знания его пароля была придумана такая вещь, как SUID и SGID биты. Рассмотрим эти полномочия подробнее.

SUID - если этот бит установлен, то при выполнении программы, id пользователя, от которого она запущена заменяется на id владельца файла. Фактически, это позволяет обычным пользователям запускать программы от имени суперпользователя;
SGID - этот флаг работает аналогичным образом, только разница в том, что пользователь считается членом группы, с которой связан файл, а не групп, к которым он действительно принадлежит. Если SGID флаг установлен на каталог, все файлы, созданные в нем, будут связаны с группой каталога, а не пользователя. Такое поведение используется для организации общих папок;
Sticky-bit - этот бит тоже используется для создания общих папок. Если он установлен, то пользователи могут только создавать, читать и выполнять файлы, но не могут удалять файлы, принадлежащие другим пользователям.

Для файла test6 установим SUID:

 chmod u+s test6

А для test7 - SGID:

 chmod g+s test7

Команда chmod -R будет рекурсивно применена ко всем вложенным файлам и каталогам.

----------------------------------
chown rob:developers strace.log			- поменять пользователя и группу у файла strace.log
chown rob:developers strace.log 1.txt	- то же что и выше, но для двух файлов
chown rob strace.log					- сменить владельца
chown :newgroup /home					- сменить id группы
chown -R max base						- сменить владельца у папки base и всех ее подпапок(рекурсивно)


*****************************************************************************************
					                Выполнение программ и пакеты                        *
*****************************************************************************************
type cp							- эти команды показывают расположение запускаемой программы
wich cp
wereis cp	

Для вновь устанавливаемых программ обычно это /usr/local/bin
запуск программы из текущей директории делается через
./someProgramm
если указать без точки, то будет ошибка(сделано из соображений безопасности)

стандартные пути берутся из переменной PATH
echo $PATH

/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/windows/system32:/mnt/c/windows:/mnt/c/windows/System32/Wbem:/mnt/c/windows/System32/WindowsPowerShell/v1.0/:/mnt/c/windows/System32/OpenSSH/:/mnt/c/Program Files/7-Zip:/mnt/c/Program Files (x86)/Common Files/Acronis/SnapAPI/:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/Users/judas/AppData/Local/Microsoft/WindowsApps:/snap/bin

не рекомендуется менять эту переменную, но если необходимо:
нужно поправить один из конфигурационных файлов Bash. Эти файлы лежат в домашней директории пользователя:

.bashrc
.bash_profile
.profile

глобально можно добавить путь в /etc/environment

В зависимости от настроек терминала, Bash прогружает либо одни файлы, либо другие. Если в вашей домашней директории есть файл .bashrc, то пробуйте использовать его, если нет, то остальные файлы в том порядке, в котором они приведены выше. Добавьте в этот файл следующую строку:

export PATH=$PATH:/path/to/directory


apt search name                                 - ищет пакет по указанному словосочетанию
dpkg -L full_name                               - показывает все файлы установленного пакета
apt show php7.4-xdebug                          - выводит полную инфу о пакете
*************************************************************************************
			                        Работа процессов в фоне                         *
*************************************************************************************
Важно понимать, что если программы работают в фоне и терминал закрыть, то они тоже закроются
mc &                                            - запуск программы в фоне

jobs                                            - показывает фоновые процессы          
[1]-  Running                 calibre &
[2]+  Stopped                 mc               

jobs -l                                         - показывает фоновые процессы с более подробным выводом
[1]-  6698 Running                 calibre &
[2]+  6995 Stopped (tty output)    mc

fg 2 или %2                                     - возвращение команды из фонового режима

для переноса программы или процесса в фон
Ctr+Z (ставит процесс на паузу) и после вводим bg

kill %n где n номер запущеной задачи            - завершает процесс
kill PID 


*************************************************************************************
			                        Работа c процессами                             *
*************************************************************************************

ps -aux                                         - вывод всеч процессов
ps -aux | grep name_of_rocess                   - вывод процесса по имени

kill PID аналогично kill SIGTERM PID            - мягкое завершение процесса и всех от него зависимых(требует времени) 
kill -9 PID аналогично kill SIGKILL PID         - жесткое завершение процесса(хвосты остаются работать) 

pkill firefox                                   - завершение всех процессов по шаблону(можно использовать часть слова)
pgrep -l [process name]                         - вывод работающих процессов по шаблону

killall viber                                   - использует имя процесса вместо PID и завершает все экземпляры процесса с этим именем

cat /etc/services                               - вывод всех сервисов и портов которые используються
